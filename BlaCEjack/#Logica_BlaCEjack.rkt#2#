#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 61 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 62 239 0 0 0 -1 -1
2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 62 239 0 0 0 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 210 0 156 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 210 0 156 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 12 186 152 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 12 186 152 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 174 161 51 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 174 161 51 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 206 193 63 0 0 0 -1
-1 2 35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 206 193 63 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 192 194 57 0 0 0 -1
-1 2 39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 192 194 57 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 143 10 109 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 143 10 109 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1965 0 32 3 12 #"#lang racket"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 84
(4
 #";; #################################################################"
 #"################"
) 0 0 28 29 1 #"\n"
0 0 18 3 11 #";; PROVIDES"
0 0 28 29 1 #"\n"
0 0 18 3 84 4 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"provide"
0 0 28 3 1 #" "
0 0 14 3 13 #"turno-crupier"
0 0 28 3 4 #")   "
0 0 18 3 32 #";; Parametros: crupierDeck, mazo"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"provide"
0 0 28 3 1 #" "
0 0 14 3 4 #"bCEj"
0 0 28 3 13 #")            "
0 0 18 3 46 #";; Parametros: cantidad de jugadores, de 1 a 3"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"provide"
0 0 28 3 1 #" "
0 0 14 3 14 #"reparte-cartas"
0 0 28 3 3 #")  "
0 0 18 3 39 #";; Parametros: lista de jugadores, mazo"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"provide"
0 0 28 3 1 #" "
0 0 14 3 9 #"dar-carta"
0 0 28 3 2 #") "
0 0 18 3 60
#";; ;; Parametros: nombre del jugador, listaDeJugadores, mazo"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"provide"
0 0 28 3 1 #" "
0 0 14 3 12 #"crea-crupier"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 84 4 0 0 28 29 1 #"\n"
0 0 18 3 84 4 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 84 4 0 0 28 29 1 #"\n"
0 0 18 3 23 #";; FUNCIONES AUXILIARES"
0 0 28 29 1 #"\n"
0 0 18 3 84 4 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 23 #";; Funcion tamano-lista"
0 0 28 29 1 #"\n"
0 0 18 3 40 #";; Recibe una lista y devuelve su tamano"
0 0 28 29 1 #"\n"
0 0 18 3 18 #";; Entradas: lista"
0 0 28 29 1 #"\n"
0 0 18 3 31 #";; Salida : tama\303\261o de la lista"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"tamano-lista"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"list?"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 16 #"tamano-lista-aux"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 14 3 6 #"Error:"
0 0 28 3 1 #" "
0 0 14 3 2 #"Se"
0 0 28 3 1 #" "
0 0 14 3 8 #"requiere"
0 0 28 3 1 #" "
0 0 14 3 3 #"una"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #" "
0 0 14 3 4 #"como"
0 0 28 3 1 #" "
0 0 14 3 9 #"parametro"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 16 #"tamano-lista-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 1 #"x"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 14 3 16 #"tamano-lista-aux"
0 0 28 3 2 #" ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 18 #";; Funcion miembro"
0 0 28 29 1 #"\n"
0 0 18 3 41 #";; Recibe un elemento y una lista y busca"
0 0 28 29 1 #"\n"
0 0 18 3 41 #";; este elemento en la lista, devuelve #t"
0 0 28 29 1 #"\n"
0 0 18 3 30 #";; si lo encuentra y #f si no."
0 0 28 29 1 #"\n"
0 0 18 3 21 #";; Entradas: x, lista"
0 0 28 29 1 #"\n"
0 0 18 3 16 #";; Salida : bool"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"miembro?"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"list?"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 11 #"miembro-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 14 3 6 #"Error:"
0 0 28 3 1 #" "
0 0 14 3 2 #"se"
0 0 28 3 1 #" "
0 0 14 3 8 #"necesita"
0 0 28 3 1 #" "
0 0 14 3 3 #"una"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #" "
0 0 14 3 4 #"como"
0 0 28 3 1 #" "
0 0 14 3 9 #"argumento"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 11 #"miembro-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 24 3 2 #"#f"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 24 3 2 #"#t"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 14 3 11 #"miembro-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 19 #";; Funcion eliminar"
0 0 28 29 1 #"\n"
0 0 18 3 41 #";; Recibe un elemento y una lista y busca"
0 0 28 29 1 #"\n"
0 0 18 3 39 #";; este elemento en la lista y lo borra"
0 0 28 29 1 #"\n"
0 0 18 3 21 #";; Entradas: x, lista"
0 0 28 29 1 #"\n"
0 0 18 3 39 #";; Salida: lista sin elemento eliminado"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 8 #"miembro?"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 12 #"eliminar-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 4 #"()))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 5 #"lista"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"eliminar-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #" "
0 0 14 3 10 #"listaFinal"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 12 #"ordena-final"
0 0 28 3 1 #" "
0 0 14 3 10 #"listaFinal"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 4 #"()))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 14 3 12 #"eliminar-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 2 #") "
0 0 14 3 10 #"listaFinal"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"          ("
0 0 14 3 12 #"eliminar-aux"
0 0 28 3 1 #" "
0 0 14 3 1 #"x"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 2 #") "
0 0 14 3 10 #"listaFinal"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"          )))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"ordena-final"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #" "
0 0 14 3 10 #"listaFinal"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 10 #"listaFinal"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 12 #"ordena-final"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 5 #"lista"
0 0 28 3 2 #") "
0 0 14 3 10 #"listaFinal"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 38 #";; Funciones disponibles del lenguaje:"
0 0 28 29 1 #"\n"
0 0 18 3 44 #";; Length : Devuelve el tama\303\261o de una lista"
0 0 28 29 1 #"\n"
0 0 18 3 32 #";; Shuffle : Desordena una lista"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 53 #";; Se define una lista que guarda las cartas en orden"
0 0 28 29 1 #"\n"
0 0 18 3 16 #";; C : Corazones"
0 0 28 29 1 #"\n"
0 0 18 3 16 #";; D : Diamantes"
0 0 28 29 1 #"\n"
0 0 18 3 12 #";; P : Picas"
0 0 28 29 1 #"\n"
0 0 18 3 15 #";; T : Treboles"
0 0 28 29 1 #"\n"
0 0 18 3 9 #";; 1 : Az"
0 0 28 29 1 #"\n"
0 0 18 3 9 #";; 11 : J"
0 0 28 29 1 #"\n"
0 0 18 3 9 #";; 12 : Q"
0 0 28 29 1 #"\n"
0 0 18 3 9 #";; 13 : K"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 2 #"(("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"6"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"7"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"8"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"9"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 2 #"11"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 2 #"12"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 2 #"13"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                 ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"6"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"7"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"8"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 1 #"9"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 2 #"11"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 2 #"12"
0 0 28 3 3 #") ("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 2 #"13"
0 0 28 3 2 #") "
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                 ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"6"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"7"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"8"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 1 #"9"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 2 #"11"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 2 #"12"
0 0 28 3 3 #") ("
0 0 14 3 1 #"P"
0 0 28 3 1 #" "
0 0 24 3 2 #"13"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                 ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"5"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"6"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"7"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"8"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 1 #"9"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 2 #"11"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 2 #"12"
0 0 28 3 3 #") ("
0 0 14 3 1 #"T"
0 0 28 3 1 #" "
0 0 24 3 2 #"13"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 23 #";; Funcion crea-crupier"
0 0 28 29 1 #"\n"
0 0 18 3 39 #";; Crea al crupier en su estado inicial"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"crea-crupier"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 24 3 1 #"'"
0 0 28 3 2 #" ("
0 0 20 3 9 #"\"crupier\""
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 6 #" ()) )"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 15 #";; Funcion bCEj"
0 0 28 29 1 #"\n"
0 0 18 3 78
(5
 #";; Inicia el juego con la cantidad de jugadores que se ingresen como"
 #" parametro"
) 0 0 28 29 1 #"\n"
0 0 18 3 36 #";; Entradas: x = numero de jugadores"
0 0 28 29 1 #"\n"
0 0 18 3 26 #";; Salida: inicia el juego"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 4 #"bCEj"
0 0 28 3 1 #" "
0 0 14 3 1 #"X"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 8 #"integer?"
0 0 28 3 1 #" "
0 0 14 3 1 #"X"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 14 3 1 #"X"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 24 3 1 #"'"
0 0 28 3 3 #"( ("
0 0 20 3 10 #"\"jugador1\""
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 7 #" ()) ))"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"         (("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 1 #" "
0 0 14 3 1 #"X"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 24 3 1 #"'"
0 0 28 3 3 #"( ("
0 0 20 3 10 #"\"jugador1\""
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 6 #" ()) ("
0 0 20 3 10 #"\"jugador2\""
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 6 #" ())))"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"         (("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 1 #" "
0 0 14 3 1 #"X"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 24 3 1 #"'"
0 0 28 3 3 #"( ("
0 0 20 3 10 #"\"jugador1\""
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 6 #" ()) ("
0 0 20 3 10 #"\"jugador2\""
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 6 #" ()) ("
0 0 20 3 10 #"\"jugador3\""
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 6 #" ())))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 24 3 2 #"#f"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 14 3 2 #"Ha"
0 0 28 3 1 #" "
0 0 14 3 9 #"ingresado"
0 0 28 3 1 #" "
0 0 14 3 2 #"un"
0 0 28 3 1 #" "
0 0 14 3 5 #"valor"
0 0 28 3 1 #" "
0 0 14 3 10 #"incorrecto"
0 0 32 3 1 #","
0 0 28 3 1 #" "
0 0 14 3 3 #"por"
0 0 28 3 1 #" "
0 0 14 3 5 #"favor"
0 0 28 3 1 #" "
0 0 14 3 7 #"ingrese"
0 0 28 3 1 #" "
0 0 14 3 2 #"un"
0 0 28 3 1 #" "
0 0 14 3 5 #"valor"
0 0 28 3 1 #" "
0 0 14 3 3 #"del"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 14 3 2 #"al"
0 0 28 3 1 #" "
0 0 24 3 1 #"3"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 65
#";; Estructura jugador:    ( \"nombre\" puntuacion '(lista cartas) )"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 20 #";; Funcion dar-carta"
0 0 28 29 1 #"\n"
0 0 18 3 107
(6
 #";; Da una carta al jugador pasado por parametro y devuelve ese mismo"
 #" jugador modificado con su nueva carta."
) 0 0 28 29 1 #"\n"
0 0 18 3 73
(7
 #";; Entradas: jugador de la forma: ( \"nombre\" puntuacion '(lista ca"
 #"rtas) )"
) 0 0 28 29 1 #"\n"
0 0 18 3 107
(8
 #";; Salida: el mismo jugador pero con la nueva carta = ( \"nombre\" p"
 #"untuacion '(lista cartas + carta nueva) )"
) 0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 9 #"dar-carta"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 28 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 6 #"append"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 6 #"append"
0 0 28 3 2 #"  "
0 0 24 3 1 #"'"
0 0 28 3 6 #"( )  ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 10 #"))))    ))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 6 #"append"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 6 #"append"
0 0 28 3 3 #"  ("
0 0 14 3 5 #"caddr"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 4 #")  ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 13 #"))) )    ))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 56
#";(dar-carta '(\"jugador2\" 0 '((A 3) (A 4))) mazo)        "
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 28 #";; Funcion dar-carta-jugador"
0 0 28 29 1 #"\n"
0 0 18 3 116
(9
 #";; Da una carta a un jugador y devuelve la lista con todos los jugad"
 #"ores y el jugador con la carta nueva actualizado"
) 0 0 28 29 1 #"\n"
0 0 18 3 73
(10
 #";; Entradas: jugador = nombre del jugador \"jugador\", listaJugadore"
 #"s, mazo"
) 0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 17 #"dar-carta-jugador"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 21 #"dar-carta-jugador-aux"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 4 #"()))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 21 #"dar-carta-jugador-aux"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 4 #"  (("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 9 #"resultado"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"         (("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 2 #" ("
0 0 14 3 4 #"caar"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 21 #"dar-carta-jugador-aux"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 2 #") "
0 0 14 3 4 #"mazo"
0 0 28 3 2 #" ("
0 0 14 3 6 #"append"
0 0 28 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 9 #"dar-carta"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 2 #") "
0 0 14 3 4 #"mazo"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 21 #"dar-carta-jugador-aux"
0 0 28 3 1 #" "
0 0 14 3 7 #"jugador"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 2 #") "
0 0 14 3 4 #"mazo"
0 0 28 3 2 #" ("
0 0 14 3 6 #"append"
0 0 28 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 7 #")))))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 107
(11
 #";(dar-carta-jugador \"jugador1\" '((\"jugador1\" 0 '((A 1) (A 3))) ("
 #"\"jugador2\" 0 '()) (\"jugador3\" 0 '())) mazo)"
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 25 #";; Funcion reparte-cartas"
0 0 28 29 1 #"\n"
0 0 18 3 110
(12
 #";; Reparte una carta a cada jugador y devuelve la lista con todos lo"
 #"s jugadores actualizada con su carta nueva"
) 0 0 28 29 1 #"\n"
0 0 18 3 11 #";; cada uno"
0 0 28 29 1 #"\n"
0 0 18 3 33 #";; Entradas: listaJugadores, mazo"
0 0 28 29 1 #"\n"
0 0 18 3 37 #";; Salida: listaJugadores actualizada"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 14 #"reparte-cartas"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 18 #"reparte-cartas-aux"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 4 #"()))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 18 #"reparte-cartas-aux"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 9 #"resultado"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 18 #"reparte-cartas-aux"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 3 #") ("
0 0 14 3 6 #"append"
0 0 28 3 1 #" "
0 0 14 3 9 #"resultado"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 9 #"dar-carta"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 14 #"listaJugadores"
0 0 28 3 2 #") "
0 0 14 3 4 #"mazo"
0 0 28 3 10 #")))   ))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 79
(13
 #";(reparte-cartas '((\"jugador1\" 0 ()) (\"jugador2\" 0 ()) (\"jugado"
 #"r3\" 0 ())) mazo)"
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 95
(14
 #";(reparte-cartas '((\"jugador1\" 0 ((P 5))) (\"jugador2\" 0 ((C 12))"
 #") (\"jugador3\" 0 ((D 8)))) mazo)"
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 12 #";; getLetter"
0 0 28 29 1 #"\n"
0 0 18 3 49 #";; Retorna la letra del par ordenada de la carta."
0 0 28 29 1 #"\n"
0 0 18 3 45 #";; Input: pair - par con la letra y el valor."
0 0 28 29 1 #"\n"
0 0 18 3 25 #";; Output: letra del par."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 9 #"getLetter"
0 0 28 3 1 #" "
0 0 14 3 4 #"pair"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 4 #"pair"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 11 #";; getValue"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";; Retorna la numero del par ordenada de la carta."
0 0 28 29 1 #"\n"
0 0 18 3 45 #";; Input: pair - par con la letra y el valor."
0 0 28 29 1 #"\n"
0 0 18 3 25 #";; Output: valor del par."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"getValue"
0 0 28 3 1 #" "
0 0 14 3 4 #"pair"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 4 #"cadr"
0 0 28 3 1 #" "
0 0 14 3 4 #"pair"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 16 #";; getPlayerName"
0 0 28 29 1 #"\n"
0 0 18 3 33 #";; Retorna el nombre del jugador."
0 0 28 29 1 #"\n"
0 0 18 3 27 #";; Input: player - jugador."
0 0 28 29 1 #"\n"
0 0 18 3 30 #";; Output: nombre del jugador."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 13 #"getPlayerName"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 17 #";; getPlayerScore"
0 0 28 29 1 #"\n"
0 0 18 3 41 #";; Retorna el puntaje actual del jugador."
0 0 28 29 1 #"\n"
0 0 18 3 27 #";; Input: player - jugador."
0 0 28 29 1 #"\n"
0 0 18 3 31 #";; Output: puntaje del jugador."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 4 #"cadr"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 16 #";; getPlayerDeck"
0 0 28 29 1 #"\n"
0 0 18 3 41 #";; Retorna el mazo de cartas del jugador."
0 0 28 29 1 #"\n"
0 0 18 3 27 #";; Input: player - jugador."
0 0 28 29 1 #"\n"
0 0 18 3 38 #";; Output: mazo de cartas del jugador."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 13 #"getPlayerDeck"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 14 3 5 #"caddr"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 21 #";; getCardsTotalValue"
0 0 28 29 1 #"\n"
0 0 18 3 112
(15
 #";; Retorna la suma total de todas las cartas del jugador,tomando en "
 #"cuenta todas las particularidades del juego."
) 0 0 28 29 1 #"\n"
0 0 18 3 43 #";; Input: playerCards - cartas del jugador."
0 0 28 29 1 #"\n"
0 0 18 3 36 #";; Output: suma total de las cartas."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 18 #"getCardsTotalValue"
0 0 28 3 1 #" "
0 0 14 3 3 #"pla"
0 0 14 3 1 #"y"
0 0 14 3 7 #"erCards"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 2 #") "
0 0 24 3 1 #"0"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 10 #"blackjack?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 2 #") "
0 0 20 3 12 #"\"Black-Jack\""
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 19 #"cardsTotalValue_aux"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 4 #")]))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 19 #"cardsTotalValue_aux"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 1 #" "
0 0 14 3 5 #"total"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" [("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 2 #") "
0 0 14 3 5 #"total"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 18 3 72
(16
 #";recorre la lista de cartas y suma al total el valor de la carta act"
 #"ual."
) 0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 19 #"cardsTotalValue_aux"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 3 #") ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 5 #"total"
0 0 28 3 2 #" ("
0 0 14 3 14 #"checkCardValue"
0 0 28 3 2 #" ("
0 0 14 3 8 #"getValue"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 3 #")) "
0 0 14 3 5 #"total"
0 0 28 3 6 #")))]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 13 #";; blackjack?"
0 0 28 29 1 #"\n"
0 0 18 3 64
#";; Verifica si la suma de las cartas de un jugador es blackjack."
0 0 28 29 1 #"\n"
0 0 18 3 43 #";; Input: playerCards - cartas del jugador."
0 0 28 29 1 #"\n"
0 0 18 3 47 #";; Output: #t si se cumple BlackJack, #f si no."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 10 #"blackjack?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" [("
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 24 3 1 #"2"
0 0 28 3 2 #" ("
0 0 14 3 6 #"length"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 4 #"))) "
0 0 24 3 2 #"#f"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 54 #";si la primera carta es K-Q-J y la segunda un As -> #t"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 2 #"<="
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #" ("
0 0 14 3 8 #"getValue"
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 5 #"))) ("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #" ("
0 0 14 3 8 #"getValue"
0 0 28 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 5 #")))) "
0 0 24 3 2 #"#t"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 55 #";si la primera carta es un As y la segunda K-Q-J. -> #t"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 2 #" ("
0 0 14 3 8 #"getValue"
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 5 #"))) ("
0 0 14 3 2 #"<="
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 2 #" ("
0 0 14 3 8 #"getValue"
0 0 28 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 28 3 1 #" "
0 0 14 3 11 #"playerCards"
0 0 28 3 5 #")))) "
0 0 24 3 2 #"#t"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 24 3 2 #"#f"
0 0 28 3 3 #"]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 17 #";; checkCardValue"
0 0 28 29 1 #"\n"
0 0 18 3 112
(17
 #";; Retorna el valor de la carta, ya sea si es un As (analizando el p"
 #"untaje actual), una letra o un valor normal."
) 0 0 28 29 1 #"\n"
0 0 18 3 43 #";; Input: playerCards - cartas del jugador."
0 0 28 29 1 #"\n"
0 0 18 3 29 #";; Output: valor de la carta."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 14 #"checkCardValue"
0 0 28 3 1 #" "
0 0 14 3 5 #"value"
0 0 28 3 1 #" "
0 0 14 3 5 #"total"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" [("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 1 #" "
0 0 14 3 5 #"value"
0 0 28 3 2 #") "
0 0 24 3 2 #"10"
0 0 28 3 2 #"] "
0 0 18 3 19 #";(K-J-Q) - valen 10"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 1 #"="
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 1 #" "
0 0 14 3 5 #"value"
0 0 28 3 3 #") ("
0 0 14 3 2 #">="
0 0 28 3 1 #" "
0 0 24 3 2 #"21"
0 0 28 3 2 #" ("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 5 #"total"
0 0 28 3 1 #" "
0 0 24 3 2 #"11"
0 0 28 3 4 #"))) "
0 0 24 3 2 #"11"
0 0 28 3 2 #"] "
0 0 18 3 56 #";As - vale 11 (cuando si se suma es igual o menor a 21)."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 14 3 5 #"value"
0 0 28 3 4 #"])) "
0 0 18 3 40 #";(2-3-4-5-6-7-8-9-10) - valen su normal."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 16 #";; Turno crupier"
0 0 28 29 1 #"\n"
0 0 18 3 79
(18
 #";; Analiza si la puntuacion del crupier es menor a 16 para solicitar"
 #" otra carta"
) 0 0 28 29 1 #"\n"
0 0 18 3 30 #";; o de lo contrario plantarse"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 13 #"turno-crupier"
0 0 28 3 1 #" "
0 0 14 3 11 #"crupierDeck"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 6 #"equal?"
0 0 28 3 2 #" ("
0 0 14 3 18 #"getCardsTotalValue"
0 0 28 3 1 #" "
0 0 14 3 11 #"crupierDeck"
0 0 28 3 2 #") "
0 0 20 3 12 #"\"Black-Jack\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 11 #"crupierDeck"
0 0 28 3 3 #" ))"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        (("
0 0 14 3 2 #"<="
0 0 28 3 2 #" ("
0 0 14 3 18 #"getCardsTotalValue"
0 0 28 3 1 #" "
0 0 14 3 11 #"crupierDeck"
0 0 28 3 2 #") "
0 0 24 3 2 #"16"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 9 #"dar-carta"
0 0 28 3 1 #" "
0 0 14 3 11 #"crupierDeck"
0 0 28 3 1 #" "
0 0 14 3 4 #"mazo"
0 0 28 3 2 #"))"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 11 #"crupierDeck"
0 0 28 3 3 #")))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 11 #";; winners?"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";; Retorna el ganador o los ganadores de la ronda."
0 0 28 29 1 #"\n"
0 0 18 3 59
#";; Input: playersList - lista de jugadores, crupier - casa."
0 0 28 29 1 #"\n"
0 0 18 3 47 #";; Output: lista con los ganadores de la ronda."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 8 #"winners?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" (("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 2 #") "
0 0 20 3 18 #"\"No hay jugadores\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 20 3 12 #"\"Black-Jack\""
0 0 28 3 2 #" ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 4 #")) ("
0 0 14 3 2 #"~a"
0 0 28 3 2 #" ("
0 0 14 3 13 #"getPlayerName"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 2 #") "
0 0 20 3 1 #"\""
0 0 20 3 1 #" "
0 0 20 3 4 #"gana"
0 0 20 3 6 #" con \""
0 0 28 3 2 #" ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 4 #"))] "
0 0 18 3 42 #";si la casa tiene blackjack, gana la casa."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 12 #"winners?_aux"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 6 #"()))))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 12 #"winners?_aux"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 1 #" "
0 0 14 3 11 #"winnersList"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 3 3 #" [("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 11 #"winnersList"
0 0 28 3 4 #")) ("
0 0 14 3 2 #"~a"
0 0 28 3 2 #" ("
0 0 14 3 13 #"getPlayerName"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 2 #") "
0 0 20 3 1 #"\""
0 0 20 3 1 #" "
0 0 20 3 4 #"gana"
0 0 20 3 6 #" con \""
0 0 28 3 2 #" ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 3 #"))]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 28 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 3 #") ("
0 0 14 3 3 #"not"
0 0 28 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 11 #"winnersList"
0 0 28 3 4 #"))) "
0 0 14 3 11 #"winnersList"
0 0 28 3 2 #"] "
0 0 18 3 2 #";("
0 0 18 3 2 #"~a"
0 0 18 3 1 #" "
0 0 18 3 10 #"\"Gana(n) \""
0 0 18 3 1 #" "
0 0 18 3 13 #"winnersList)]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 28 3 2 #" ("
0 0 14 3 12 #"winners?_aux"
0 0 28 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 2 #") "
0 0 14 3 7 #"crupier"
0 0 28 3 2 #" ["
0 0 14 3 6 #"append"
0 0 28 3 1 #" "
0 0 14 3 11 #"winnersList"
0 0 28 3 2 #" ("
0 0 14 3 16 #"victoryCondition"
0 0 28 3 2 #" ("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 11 #"playersList"
0 0 28 3 2 #") "
0 0 14 3 7 #"crupier"
0 0 28 3 2 #")]"
0 0 28 29 1 #"\n"
0 0 28 3 51 #"   )]))                                            "
0 0 18 3 48 #";; (append '() '((\"Player1\" 10) (\"Player2\" 20)))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 19 #";; victoryCondition"
0 0 28 29 1 #"\n"
0 0 18 3 115
(19
 #";; Compara las puntuaciones y retorna una tupla con el nombre del ju"
 #"gador y el puntaje, si este le gana al crupier."
) 0 0 28 29 1 #"\n"
0 0 18 3 43 #";; Input: player - jugador, crupier - casa."
0 0 28 29 1 #"\n"
0 0 18 3 92
(20
 #";; Output: Lista con tupla con el nombre del jugador y el puntaje, s"
 #"i gana. Nada, si pierde."
) 0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #" ("
0 0 14 3 16 #"victoryCondition"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"  ("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 20 3 11 #"\"Black-Jack"
0 0 20 3 1 #"\""
0 0 28 3 2 #" ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 13 #"getPlayerName"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 3 #") ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 5 #")))] "
0 0 18 3 37 #";si el jugaodr tiene blackjack, gana."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 24 3 2 #"21"
0 0 28 3 2 #" ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 3 #")) "
0 0 24 3 1 #"'"
0 0 28 3 4 #"()] "
0 0 18 3 26 #";si se pasa de 21, pierde."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 28 3 2 #" ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 3 #") ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 4 #"list"
0 0 28 3 2 #" ("
0 0 14 3 13 #"getPlayerName"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 3 #") ("
0 0 14 3 14 #"getPlayerScore"
0 0 28 3 1 #" "
0 0 14 3 6 #"player"
0 0 28 3 5 #")))] "
0 0 18 3 35 #";si tiene mas que el crupier, gana."
0 0 28 29 1 #"\n"
0 0 28 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 5 #"()]))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 46 #";-------------------Pruebas-------------------"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 79
(21
 #";(reparte-cartas '(( (A 1) (A 5)) ((A 2) (D 1)) ((A 3) (P 4))) (shuf"
 #"fle mazo) )"
) 0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 15 #";(dar-carta '(\""
0 0 18 3 28 #"crupier\" 0 ()) mazo)        "
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 29 #";(blackjack? '((C 1) (P 11)))"
0 0 28 29 1 #"\n"
0 0 18 3 29 #";(blackjack? '((A 12) (A 1)))"
0 0 28 29 1 #"\n"
0 0 18 3 30 #";(blackjack? '((A 13) (A 13)))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 22 #";(checkCardValue 11 0)"
0 0 28 29 1 #"\n"
0 0 18 3 22 #";(checkCardValue 1 10)"
0 0 28 29 1 #"\n"
0 0 18 3 22 #";(checkCardValue 1 11)"
0 0 28 29 1 #"\n"
0 0 18 3 22 #";(checkCardValue 3 10)"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 36 #";(getPlayerScore (car listaPlayers))"
0 0 28 29 1 #"\n"
0 0 18 3 35 #";(getPlayerDeck (car listaPlayers))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 46 #";(getCardsTotalValue '((C 1) (A 5) (C 1))) ;17"
0 0 28 29 1 #"\n"
0 0 18 3 47 #";(getCardsTotalValue '((C 1) (A 13) (C 1))) ;22"
0 0 28 29 1 #"\n"
0 0 18 3 48 #";(getCardsTotalValue '((C 11) (A 1))) ;BlackJack"
0 0 28 29 1 #"\n"
0 0 18 3 48 #";(getCardsTotalValue '((D 12) (A 13) (C 1))) ;21"
0 0 28 29 1 #"\n"
0 0 18 3 46 #";(getCardsTotalValue '((D 1) (D 1) (D 1))) ;13"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 52 #";(turno-crupier '((C 1) (A 5) (C 1)) (shuffle mazo))"
0 0 28 29 1 #"\n"
0 0 18 3 52 #";(turno-crupier '((C 1) (A 2) (P 1)) (shuffle mazo))"
0 0 28 29 1 #"\n"
0 0 18 3 58
#";(turno-crupier '((C 1) (A 2) (P 1) (H 1)) (shuffle mazo))"
0 0 28 29 1 #"\n"
0 0 18 3 46 #";(turno-crupier '((C 1) (A 9)) (shuffle mazo))"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 11 #"listPlayers"
0 0 28 3 2 #"  "
0 0 24 3 1 #"'"
0 0 28 3 2 #"(("
0 0 20 3 8 #"\"Player1"
0 0 20 3 1 #"\""
0 0 28 3 1 #" "
0 0 24 3 2 #"21"
0 0 28 3 3 #" (("
0 0 14 3 1 #"A"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 2 #"12"
0 0 28 3 5 #"))) ("
0 0 20 3 8 #"\"Player2"
0 0 20 3 1 #"\""
0 0 28 3 1 #" "
0 0 24 3 2 #"21"
0 0 28 3 3 #" (("
0 0 14 3 1 #"A"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 2 #"10"
0 0 28 3 5 #"))) ("
0 0 20 3 8 #"\"Player3"
0 0 20 3 1 #"\""
0 0 28 3 1 #" "
0 0 24 3 2 #"21"
0 0 28 3 3 #" (("
0 0 14 3 1 #"A"
0 0 28 3 1 #" "
0 0 24 3 1 #"1"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"4"
0 0 28 3 5 #")))))"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 2 #"  "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 20 3 8 #"\"Crupier"
0 0 20 3 1 #"\""
0 0 28 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 11 #"Black-Jack\""
0 0 28 3 3 #" (("
0 0 14 3 1 #"D"
0 0 28 3 1 #" "
0 0 24 3 2 #"11"
0 0 28 3 3 #") ("
0 0 14 3 1 #"C"
0 0 28 3 1 #" "
0 0 24 3 1 #"9"
0 0 28 3 4 #"))))"
0 0 28 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 16 #"victoryCondition"
0 0 18 3 28 #" (cadr listPlayers) crupier)"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 8 #"winners?"
0 0 28 3 1 #" "
0 0 14 3 11 #"listPlayers"
0 0 28 3 1 #" "
0 0 14 3 7 #"crupier"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0           0
